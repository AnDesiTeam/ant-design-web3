"use strict";(self.webpackChunk_ant_design_web3_docs=self.webpackChunk_ant_design_web3_docs||[]).push([[4378],{654:function(k,w,e){e.d(w,{E:function(){return p}});var g=e(15e3),h=e(7430);function p(l,m){if(!(0,h.U)(l,{strict:!1}))throw new g.b({address:l});if(!(0,h.U)(m,{strict:!1}))throw new g.b({address:m});return l.toLowerCase()===m.toLowerCase()}},14378:function(k,w,e){e.d(w,{G:function(){return v},offchainLookup:function(){return P},K:function(){return O},offchainLookupSignature:function(){return D}});var g=e(88592),h=e(43016),p=e(9447),l=e(26392);class m extends p.G{constructor({callbackSelector:r,cause:t,data:o,extraData:d,sender:i,urls:s}){var f;super(t.shortMessage||"An error occurred while fetching for an offchain result.",{cause:t,metaMessages:[...t.metaMessages||[],(f=t.metaMessages)!=null&&f.length?"":[],"Offchain Gateway Call:",s&&["  Gateway URL(s):",...s.map(u=>`    ${(0,l.G)(u)}`)],`  Sender: ${i}`,`  Data: ${o}`,`  Callback selector: ${r}`,`  Extra data: ${d}`].flat(),name:"OffchainLookupError"})}}class M extends p.G{constructor({result:r,url:t}){super("Offchain gateway response is malformed. Response data must be a hex value.",{metaMessages:[`Gateway URL: ${(0,l.G)(t)}`,`Response: ${(0,h.P)(r)}`],name:"OffchainLookupResponseMalformedError"})}}class G extends p.G{constructor({sender:r,to:t}){super("Reverted sender address does not match target contract address (`to`).",{metaMessages:[`Contract address: ${t}`,`OffchainLookup sender address: ${r}`],name:"OffchainLookupSenderMismatchError"})}}var L=e(73183),R=e(37775),b=e(42530),x=e(654),C=e(30614),A=e(62849);const D="0x556f1830",O={name:"OffchainLookup",type:"error",inputs:[{name:"sender",type:"address"},{name:"urls",type:"string[]"},{name:"callData",type:"bytes"},{name:"callbackFunction",type:"bytes4"},{name:"extraData",type:"bytes"}]};async function P(c,{blockNumber:r,blockTag:t,data:o,to:d}){const{args:i}=(0,R.p)({data:o,abi:[O]}),[s,f,u,a,n]=i,{ccipRead:y}=c,S=y&&typeof(y==null?void 0:y.request)=="function"?y.request:v;try{if(!(0,x.E)(d,s))throw new G({sender:s,to:d});const E=await S({data:u,sender:s,urls:f}),{data:$}=await(0,g.R)(c,{blockNumber:r,blockTag:t,data:(0,C.zo)([a,(0,b.E)([{type:"bytes"},{type:"bytes"}],[E,n])]),to:d});return $}catch(E){throw new m({callbackSelector:a,cause:E,data:o,extraData:n,sender:s,urls:f})}}async function v({data:c,sender:r,urls:t}){var d;let o=new Error("An unknown error occurred.");for(let i=0;i<t.length;i++){const s=t[i],f=s.includes("{data}")?"GET":"POST",u=f==="POST"?{data:c,sender:r}:void 0;try{const a=await fetch(s.replace("{sender}",r).replace("{data}",c),{body:JSON.stringify(u),method:f});let n;if((d=a.headers.get("Content-Type"))!=null&&d.startsWith("application/json")?n=(await a.json()).data:n=await a.text(),!a.ok){o=new L.Gg({body:u,details:n!=null&&n.error?(0,h.P)(n.error):a.statusText,headers:a.headers,status:a.status,url:s});continue}if(!(0,A.v)(n)){o=new M({result:n,url:s});continue}return n}catch(a){o=new L.Gg({body:u,details:a.message,url:s})}}throw o}}}]);
